"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendAccountUnlockedEmail = exports.sendAccountBlockedEmail = exports.sendOrderSpamWarningEmail = exports.sendReviewWarningEmail = exports.sendResetPasswordEmail = void 0;
const nodemailer_1 = __importDefault(require("nodemailer"));
const dotenv_1 = __importDefault(require("dotenv"));
dotenv_1.default.config();
// Kh·ªüi t·∫°o transporter chung
const transporter = nodemailer_1.default.createTransport({
    service: "gmail",
    auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
    },
});
// G·ª≠i email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
const sendResetPasswordEmail = (to, resetLink) => __awaiter(void 0, void 0, void 0, function* () {
    const mailOptions = {
        from: `"Shop For You" <${process.env.EMAIL_USER}>`,
        to,
        subject: "Kh√¥i ph·ª•c m·∫≠t kh·∫©u - Shop For You",
        html: `
      <div style="font-family: Arial; max-width: 600px; margin: auto; padding: 20px; border: 1px solid #e5e7eb; border-radius: 8px;">
        <h2 style="text-align: center; color: #111827;">Shop For You</h2>
        <h3 style="text-align: center; color: #111827;">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h3>
        <p style="font-size: 16px;">Xin ch√†o,</p>
        <p style="font-size: 16px;">B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u. Nh·∫•n n√∫t b√™n d∆∞·ªõi ƒë·ªÉ ti·∫øp t·ª•c:</p>
        <div style="text-align: center; margin: 24px 0;">
          <a href="${resetLink}" style="background-color: #111827; color: white; padding: 12px 24px; border-radius: 6px; text-decoration: none;">
            ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
          </a>
        </div>
        <p style="font-size: 13px; color: #6b7280; text-align: center;">
          Li√™n k·∫øt n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong 15 ph√∫t. N·∫øu kh√¥ng ph·∫£i b·∫°n, h√£y b·ªè qua.
        </p>
      </div>
    `,
    };
    yield transporter.sendMail(mailOptions);
});
exports.sendResetPasswordEmail = sendResetPasswordEmail;
// G·ª≠i email c·∫£nh b√°o spam review
const sendReviewWarningEmail = (to, name) => __awaiter(void 0, void 0, void 0, function* () {
    const mailOptions = {
        from: `"Shop For You" <${process.env.EMAIL_USER}>`,
        to,
        subject: "C·∫£nh b√°o spam ƒë√°nh gi√° - Shop For You",
        html: `
      <div style="font-family: Arial; max-width: 600px; margin: auto; padding: 20px; border: 1px solid #fbbf24; border-radius: 8px;">
        <h2 style="text-align: center; color: #b45309;">‚ö†Ô∏è C·∫£nh b√°o</h2>
        <p>Xin ch√†o ${name},</p>
        <p>B·∫°n ƒë√£ c√≥ 2 ƒë√°nh gi√° b·ªã ƒë√°nh d·∫•u l√† spam. N·∫øu ti·∫øp t·ª•c, t√†i kho·∫£n s·∫Ω b·ªã kh√≥a.</p>
        <p style="font-size: 14px; color: #6b7280;">H√£y ƒë·∫£m b·∫£o c√°c ƒë√°nh gi√° ph·∫£n √°nh ƒë√∫ng tr·∫£i nghi·ªám c·ªßa b·∫°n.</p>
        <hr style="margin-top: 24px; border-top: 1px solid #fcd34d;" />
        <p style="font-size: 13px; color: #9ca3af; text-align: center;">Shop For You - H·ªá th·ªëng c·∫£nh b√°o t·ª± ƒë·ªông.</p>
      </div>
    `,
    };
    yield transporter.sendMail(mailOptions);
});
exports.sendReviewWarningEmail = sendReviewWarningEmail;
// G·ª≠i email c·∫£nh b√°o bom h√†ng
const sendOrderSpamWarningEmail = (to, name) => __awaiter(void 0, void 0, void 0, function* () {
    const mailOptions = {
        from: `"Shop For You" <${process.env.EMAIL_USER}>`,
        to,
        subject: "C·∫£nh b√°o bom h√†ng - Shop For You",
        html: `
      <div style="font-family: Arial; max-width: 600px; margin: auto; padding: 20px; border: 1px solid #facc15; border-radius: 8px;">
        <h2 style="text-align: center; color: #ca8a04;">üö® C·∫£nh b√°o bom h√†ng</h2>
        <p>Xin ch√†o ${name},</p>
        <p>H·ªá th·ªëng ph√°t hi·ªán b·∫°n c√≥ h√†nh vi ƒë·∫∑t h√†ng nh∆∞ng kh√¥ng nh·∫≠n h√†ng nhi·ªÅu l·∫ßn. Vui l√≤ng x√°c nh·∫≠n ƒë∆°n h√†ng trong t∆∞∆°ng lai ƒë·ªÉ tr√°nh b·ªã kh√≥a t√†i kho·∫£n.</p>
        <p style="font-size: 13px; color: #9ca3af; text-align: center;">Shop For You - T√¥n tr·ªçng ng∆∞·ªùi b√°n h√†ng l√† t√¥n tr·ªçng ch√≠nh b·∫°n.</p>
      </div>
    `,
    };
    yield transporter.sendMail(mailOptions);
});
exports.sendOrderSpamWarningEmail = sendOrderSpamWarningEmail;
// G·ª≠i email t√†i kho·∫£n b·ªã kh√≥a
const sendAccountBlockedEmail = (to, name) => __awaiter(void 0, void 0, void 0, function* () {
    const mailOptions = {
        from: `"Shop For You" <${process.env.EMAIL_USER}>`,
        to,
        subject: "T√†i kho·∫£n b·ªã kh√≥a - Shop For You",
        html: `
      <div style="font-family: Arial; max-width: 600px; margin: auto; padding: 20px; border: 1px solid #ef4444; border-radius: 8px;">
        <h2 style="text-align: center; color: #b91c1c;">üö´ T√†i kho·∫£n b·ªã kh√≥a</h2>
        <p>Xin ch√†o ${name},</p>
        <p>T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ b·ªã kh√≥a do c√≥ nhi·ªÅu h√†nh vi vi ph·∫°m quy ƒë·ªãnh.</p>
        <p style="font-size: 14px; color: #6b7280;">N·∫øu b·∫°n cho r·∫±ng ƒë√¢y l√† nh·∫ßm l·∫´n, vui l√≤ng li√™n h·ªá b·ªô ph·∫≠n h·ªó tr·ª£.</p>
        <hr style="margin: 24px 0; border-top: 1px solid #f87171;" />
        <p style="font-size: 13px; color: #9ca3af; text-align: center;">Shop For You - ƒê·∫£m b·∫£o m√¥i tr∆∞·ªùng an to√†n cho c·ªông ƒë·ªìng.</p>
      </div>
    `,
    };
    yield transporter.sendMail(mailOptions);
});
exports.sendAccountBlockedEmail = sendAccountBlockedEmail;
const sendAccountUnlockedEmail = (to, name) => __awaiter(void 0, void 0, void 0, function* () {
    const mailOptions = {
        from: `"Shop For You" <${process.env.EMAIL_USER}>`,
        to,
        subject: "T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c m·ªü kh√≥a - Shop For You",
        html: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: auto; padding: 20px; border: 1px solid #e5e7eb; border-radius: 8px;">
        <h2 style="text-align: center; color: #111827;">Shop For You</h2>
        <p>Xin ch√†o ${name || ""},</p>
        <p>T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c m·ªü kh√≥a v√† c√≥ th·ªÉ s·ª≠ d·ª•ng l·∫°i b√¨nh th∆∞·ªùng.</p>
        <p>N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
      </div>
    `,
    };
    yield transporter.sendMail(mailOptions);
});
exports.sendAccountUnlockedEmail = sendAccountUnlockedEmail;
