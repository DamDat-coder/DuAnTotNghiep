import { Request, Response } from "express";
import { vonage, otpMap } from "../config/vonage";

// G·ª≠i OTP
export const sendSmsOTP = async (req: Request, res: Response) => {
  try {
    const { phone } = req.body;
    if (!phone) {
      return res
        .status(400)
        .json({ success: false, message: "Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i." });
    }

    const otp = Math.floor(100000 + Math.random() * 900000).toString();
    otpMap.set(phone, otp);
    console.log(`üì© G·ª≠i OTP ${otp} ƒë·∫øn s·ªë: ${phone}`);

    console.log("B·∫Øt ƒë·∫ßu g·ª≠i SMS...");
    try {
      const toPhone = phone.startsWith("0")
        ? "+84" + phone.slice(1)
        : phone; 
        
      const response = await vonage.sms.send({
        to: toPhone,
        from: process.env.VONAGE_FROM || "Shop4Real",
        text: `M√£ OTP Shop4Real c·ªßa b·∫°n l√†: ${otp}`,
      });
      console.log("Vonage response:", response);
    } catch (error) {
      console.error("Vonage send error:", error);
    }
    console.log("K·∫øt th√∫c g·ª≠i SMS.");

    return res.json({ success: true, message: "ƒê√£ g·ª≠i OTP qua SMS." });
  } catch (error: any) {
    return res.status(500).json({
      success: false,
      message: "G·ª≠i SMS OTP th·∫•t b·∫°i.",
      error: error.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh.",
    });
  }
};

// X√°c minh OTP
export const verifySmsOTP = async (req: Request, res: Response) => {
  try {
    const { phone, otp } = req.body;
    if (!phone || !otp) {
      return res
        .status(400)
        .json({ success: false, message: "Thi·∫øu s·ªë ƒëi·ªán tho·∫°i ho·∫∑c m√£ OTP." });
    }

    const savedOTP = otpMap.get(phone);
    if (!savedOTP) {
      return res.status(400).json({
        success: false,
        message: "OTP kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ h·∫øt h·∫°n.",
      });
    }

    if (otp !== savedOTP) {
      return res
        .status(401)
        .json({ success: false, message: "M√£ OTP kh√¥ng ch√≠nh x√°c." });
    }

    otpMap.delete(phone);

    return res.json({ success: true, message: "X√°c minh OTP th√†nh c√¥ng." });
  } catch (error: any) {
    return res.status(500).json({
      success: false,
      message: "L·ªói x√°c minh OTP.",
      error: error.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh.",
    });
  }
};
